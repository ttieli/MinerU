version: '3.8'

services:
  # 主要的MinerU全功能服务
  mineru-full:
    build:
      context: .
      dockerfile: Dockerfile.fixed
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VERSION: ${VERSION:-2.0-full-fixed}
    
    platform: linux/arm64  # 指定ARM64架构
    image: mineru-m1-full:${VERSION:-latest}
    container_name: mineru-full-api
    hostname: mineru-full
    restart: unless-stopped
    
    # 端口映射
    ports:
      - "${API_PORT:-8000}:8000"     # API服务端口
      - "${MONITOR_PORT:-8080}:8080" # 监控端口
    
    # 环境变量配置
    environment:
      # 模型源配置
      - MINERU_MODEL_SOURCE=${MINERU_MODEL_SOURCE:-huggingface}
      
      # 设备配置
      - DEVICE_MODE=${DEVICE_MODE:-mps}
      - MPS_MEMORY_LIMIT=${MPS_MEMORY_LIMIT:-8G}
      - PYTORCH_ENABLE_MPS_FALLBACK=1
      - PYTORCH_MPS_HIGH_WATERMARK_RATIO=0.0
      - MPS_MEMORY_FRACTION=${MPS_MEMORY_FRACTION:-0.8}
      
      # 功能开关
      - ENABLE_VLM=${ENABLE_VLM:-true}
      - ENABLE_PIPELINE=${ENABLE_PIPELINE:-true}
      - ENABLE_TABLE=${ENABLE_TABLE:-true}
      - ENABLE_FORMULA=${ENABLE_FORMULA:-true}
      - ENABLE_LLM_AIDED=${ENABLE_LLM_AIDED:-false}
      
      # 性能配置
      - MAX_WORKERS=${MAX_WORKERS:-4}
      - BATCH_SIZE=${BATCH_SIZE:-2}
      - MEMORY_LIMIT=${MEMORY_LIMIT:-8G}
      - MODEL_PRECISION=${MODEL_PRECISION:-fp16}
      - WORKER_PROCESSES=${WORKER_PROCESSES:-4}
      - WORKER_THREADS=${WORKER_THREADS:-2}
      - QUEUE_MAX_SIZE=${QUEUE_MAX_SIZE:-100}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-300}
      
      # 内存优化
      - MEMORY_EFFICIENT_MODE=${MEMORY_EFFICIENT_MODE:-true}
      - MODEL_OFFLOAD_CPU=${MODEL_OFFLOAD_CPU:-true}
      - CLEAR_CACHE_INTERVAL=${CLEAR_CACHE_INTERVAL:-100}
      - ADAPTIVE_BATCH_SIZE=${ADAPTIVE_BATCH_SIZE:-true}
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-4}
      
      # 日志配置
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      
      # Python路径
      - PYTHONPATH=/app
    
    # 数据卷映射
    volumes:
      # 模型持久化存储 - 使用已下载的本地模型
      - ./models:/opt/models
      - ./layoutreader:/opt/layoutreader
      
      # 缓存和日志
      - ./cache:/app/cache
      - ./logs:/app/logs
      
      # 输出目录
      - ./output:/app/output
      - ./temp:/app/temp
      
      # 配置文件（可选挂载自定义配置）
      - ./config:/app/config
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-16G}
          cpus: '${CPU_LIMIT:-8.0}'
        reservations:
          memory: ${MEMORY_RESERVATION:-8G}
          cpus: '${CPU_RESERVATION:-4.0}'
    
    # 健康检查
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    
    # 网络配置
    networks:
      - mineru-network
    
    # 系统配置
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    
    # 安全配置
    security_opt:
      - no-new-privileges:true
    
    # 标签
    labels:
      - "com.mineru.service=api"
      - "com.mineru.version=${VERSION:-2.0-full-fixed}"

  # Redis缓存服务（用于任务队列和缓存）
  redis:
    image: redis:7-alpine
    container_name: mineru-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    networks:
      - mineru-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

# 数据卷定义
volumes:
  # Redis数据
  redis_data:
    driver: local

# 网络配置
networks:
  mineru-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16